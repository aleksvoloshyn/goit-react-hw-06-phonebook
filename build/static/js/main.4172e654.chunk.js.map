{"version":3,"sources":["Components/Container/Container.module.css","Components/ContactForm/ContactForm.module.css","Components/ContactList/ContactList.module.css","Components/Filter/Filter.module.css","Components/Container/Container.jsx","Components/ContactForm/ContactForm.jsx","redux/contacts/contacts-actions.js","Components/Filter/Filter.jsx","Components/ContactList/ContactList.jsx","App.js","reportWebVitals.js","redux/contacts/contacts-reducer.js","Components/Notifications/Notifications.jsx","redux/store.js","index.js"],"names":["module","exports","Container","props","className","s","container","children","ContactForm","onSubmit","useState","name","setName","number","setNumber","handleChange","target","value","action","e","preventDefault","contactForm","contactForm__label","htmlFor","type","placeholder","pattern","title","required","onChange","Button","addContact","createAction","contact","payload","id","uuidv4","deleteContact","filter","connect","dispatch","contactsActions","filter__input","ContactList","contacts","map","cont","contactList__item","contactList__name","contactList__number","variant","onClick","items","addItem","item","onDeleteContact","container__label","container__contacts","toLowerCase","includes","getFilteredResult","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","createReducer","actions","state","find","store","addNotification","message","animationIn","animationOut","dismiss","duration","onScreen","touchSlidingExit","swipe","timingFunction","delay","fade","insert","_","combineReducers","middleware","getDefaultMiddleware","logger","configureStore","reducer","contactsReducer","devTools","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4172e654.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__3Gm4e\",\"container__label\":\"Container_container__label__2PsCL\",\"container__contacts\":\"Container_container__contacts__1agmc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactForm\":\"ContactForm_contactForm__gi9ve\",\"contactForm__label\":\"ContactForm_contactForm__label__2UGmG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList__item\":\"ContactList_contactList__item__3RecD\",\"contactList__name\":\"ContactList_contactList__name__1hI4P\",\"contactList__number\":\"ContactList_contactList__number__2Vqyi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter__input\":\"Filter_filter__input__3Ro3_\"};","import s from './Container.module.css';\r\nfunction Container(props) {\r\n  return <div className={s.container}> {props.children}</div>;\r\n}\r\n\r\nexport { Container };\r\n","import { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Button } from 'react-bootstrap';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport s from './ContactForm.module.css';\r\n\r\nconst ContactForm = ({ onSubmit }) => {\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n\r\n  const handleChange = ({ target }) => {\r\n    if (target.name === 'name') {\r\n      setName(target.value);\r\n    }\r\n    if (target.name === 'number') {\r\n      setNumber(target.value);\r\n    }\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    onSubmit({ name, number });\r\n    setName('');\r\n    setNumber('');\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <form action=\"\" onSubmit={handleSubmit} className={s.contactForm}>\r\n        <label className={s.contactForm__label} htmlFor=\"\">\r\n          Name\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            placeholder=\"John Snow\"\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n            value={name}\r\n            onChange={handleChange}\r\n          />\r\n        </label>\r\n        <label className={s.contactForm__label} htmlFor=\"\">\r\n          Number\r\n          <input\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            placeholder=\"+38(093)9995040\"\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            required\r\n            value={number}\r\n            onChange={handleChange}\r\n          />\r\n        </label>\r\n        <Button type=\"submit\">Add contact</Button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nContactForm.propTypes = {\r\n  name: PropTypes.string,\r\n  phone: PropTypes.number,\r\n};\r\n\r\nexport { ContactForm };\r\n","// import types from './contacts-types';\r\nimport { createAction } from '@reduxjs/toolkit';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nconst addContact = createAction('contacts/add', contact => ({\r\n  payload: {\r\n    id: uuidv4(),\r\n    name: contact.name,\r\n    number: contact.number,\r\n  },\r\n}));\r\n\r\nconst deleteContact = createAction('contacts/delete');\r\n\r\nconst filter = createAction('contacts/filter');\r\n\r\nexport default { addContact, filter, deleteContact };\r\n","import s from './Filter.module.css';\r\nimport { connect } from 'react-redux';\r\nimport contactsActions from './../../redux/contacts/contacts-actions';\r\n\r\nfunction Filter({ onChange }) {\r\n  return (\r\n    <>\r\n      <label htmlFor=\"\">\r\n        Find contacts by name\r\n        <input\r\n          className={s.filter__input}\r\n          type=\"text\"\r\n          placeholder=\"find by name..\"\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n          onChange={onChange}\r\n        />\r\n      </label>\r\n    </>\r\n  );\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onChange: e => dispatch(contactsActions.filter(e.target.value)),\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(Filter);\r\n","import PropTypes from 'prop-types';\r\nimport { Button } from 'react-bootstrap';\r\nimport s from './ContactList.module.css';\r\n\r\nfunction ContactList({ contacts, deleteContact }) {\r\n  //   contacts = [\r\n  //     { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\r\n  //     { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\r\n  //     { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\r\n  //     { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\r\n  //   ];\r\n\r\n  return (\r\n    <div>\r\n      <ul>\r\n        {contacts.map(cont => {\r\n          return (\r\n            <li className={s.contactList__item} key={cont.id}>\r\n              <span className={s.contactList__name}>{cont.name}</span>\r\n              <span className={s.contactList__number}>{cont.number}</span>\r\n              <Button variant=\"danger\" onClick={() => deleteContact(cont.id)}>\r\n                Delete\r\n              </Button>\r\n            </li>\r\n          );\r\n        })}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({ id: PropTypes.string.isRequired }),\r\n  ),\r\n};\r\n\r\nexport { ContactList };\r\n","import './App.css';\n// import React from 'react';\nimport { useState } from 'react';\n// import { useLocalStotage } from './hooks/useLocalStorage';\nimport { Container } from './Components/Container/Container';\nimport { ContactForm } from './Components/ContactForm/ContactForm';\nimport Filter from './Components/Filter/Filter';\nimport { ContactList } from './Components/ContactList/ContactList';\n// import { v4 as uuidv4 } from 'uuid';\nimport ReactNotifications from 'react-notifications-component';\nimport {\n  onSuccsessNotification,\n  onErrorNotification,\n  onDeleteNotification,\n} from './Components/Notifications/Notifications';\nimport s from './../src/Components/Container/Container.module.css';\n\nimport 'react-notifications-component/dist/theme.css';\nimport 'animate.css';\nimport { connect } from 'react-redux';\nimport contactsActions from './redux/contacts/contacts-actions';\n\n// const defaultContacts = [\n//   { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n//   { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n//   { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n//   { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n// ];\n\nconst App = ({ contacts, filter, addItem, onDeleteContact }) => {\n  const getFilteredResult = (contacts, filter) => {\n    return contacts.filter(contact => {\n      return contact.name.toLowerCase().includes(filter);\n    });\n  };\n\n  return (\n    <div className=\"App\">\n      <ReactNotifications />\n      <Container>\n        <h1 className={s.container__label}>Phonebook</h1>\n        <ContactForm onSubmit={addItem} />\n\n        <h2 className={s.container__contacts}>Contacts</h2>\n\n        <Filter />\n        <ContactList\n          contacts={getFilteredResult(contacts, filter)}\n          deleteContact={onDeleteContact}\n        />\n      </Container>\n    </div>\n  );\n};\n\nconst mapStateToProps = ({ contacts: { items, filter } }) => ({\n  contacts: items,\n  filter: filter,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  addItem: item => dispatch(contactsActions.addContact(item)),\n  onDeleteContact: item => dispatch(contactsActions.deleteContact(item)),\n\n  // switchFilter: e => dispatch(contactsActions.filter(e.target.value)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n// export default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\n// import types from './contacts-types';\r\nimport actions from './contacts-actions';\r\nimport {\r\n  onDeleteNotification,\r\n  onSuccsessNotification,\r\n  onErrorNotification,\r\n} from '../../Components/Notifications/Notifications';\r\n\r\nconst contactsState = [\r\n  { id: 'id-1', name: 'Funny', number: '459-12-56' },\r\n  { id: 'id-2', name: 'Doctor', number: '443-89-12' },\r\n  { id: 'id-3', name: 'Anchous', number: '645-17-79' },\r\n  { id: 'id-4', name: 'Peppylotta', number: '227-91-26' },\r\n  { id: 'id-5', name: 'Asusena', number: '227-91-236' },\r\n];\r\n\r\nconst items = createReducer(contactsState, {\r\n  [actions.addContact]: (state, action) => {\r\n    if (\r\n      state.find(cont => {\r\n        return cont.name === action.payload.name;\r\n      })\r\n    ) {\r\n      onErrorNotification();\r\n      return [...state];\r\n    } else {\r\n      onSuccsessNotification();\r\n      return [action.payload, ...state];\r\n    }\r\n  },\r\n\r\n  [actions.deleteContact]: (state, action) => {\r\n    onDeleteNotification();\r\n    return state.filter(item => {\r\n      return item.id !== action.payload;\r\n    });\r\n  },\r\n});\r\n\r\nconst filter = createReducer([], {\r\n  [actions.filter]: (_, action) => [action.payload.toLowerCase()],\r\n});\r\n\r\nexport default combineReducers({ items, filter });\r\n","import { store } from 'react-notifications-component';\r\nexport const onSuccsessNotification = () => {\r\n  store.addNotification({\r\n    title: 'Congratulations!',\r\n    message: 'Контакт успешно добавлен в справочник',\r\n    type: 'success',\r\n    insert: 'top',\r\n    container: 'top-right',\r\n    animationIn: ['animate__animated', 'animate__fadeIn'],\r\n    animationOut: ['animate__animated', 'animate__fadeOut'],\r\n    dismiss: {\r\n      duration: 5000,\r\n      onScreen: true,\r\n    },\r\n  });\r\n};\r\n\r\nexport const onErrorNotification = () => {\r\n  store.addNotification({\r\n    title: 'Ошибочка...!',\r\n    message: 'Такой контакт уже есть',\r\n    type: 'danger', // 'default', 'success', 'info', 'warning'\r\n    container: 'top-right', // where to position the notifications\r\n    animationIn: ['animate__animated', 'animate__fadeIn'],\r\n    animationOut: ['animate__animated', 'animate__fadeOut'],\r\n    dismiss: {\r\n      duration: 2000,\r\n      onScreen: true,\r\n    },\r\n    touchSlidingExit: {\r\n      swipe: {\r\n        duration: 400,\r\n        timingFunction: 'ease-out',\r\n        delay: 0,\r\n      },\r\n      fade: {\r\n        duration: 400,\r\n        timingFunction: 'ease-out',\r\n        delay: 0,\r\n      },\r\n    },\r\n  });\r\n  //   alert('Такой контакт уже есть');\r\n};\r\n\r\nexport const onDeleteNotification = () => {\r\n  store.addNotification({\r\n    title: 'Информация!',\r\n    message: 'Констакт успешно удален',\r\n    type: 'warning', // 'default', 'success', 'info', 'warning'\r\n    container: 'top-right', // where to position the notifications\r\n    animationIn: ['animate__animated', 'animate__fadeIn'],\r\n    animationOut: ['animate__animated', 'animate__fadeOut'],\r\n    dismiss: {\r\n      duration: 2000,\r\n      onScreen: true,\r\n    },\r\n    touchSlidingExit: {\r\n      swipe: {\r\n        duration: 400,\r\n        timingFunction: 'ease-out',\r\n        delay: 0,\r\n      },\r\n      fade: {\r\n        duration: 400,\r\n        timingFunction: 'ease-out',\r\n        delay: 0,\r\n      },\r\n    },\r\n  });\r\n};\r\n","// import { combineReducers } from 'redux';\r\n// import { composeWithDevTools } from 'redux-devtools-extension';\r\nimport contactsReducer from './contacts/contacts-reducer';\r\nimport { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport logger from 'redux-logger';\r\n\r\nconst middleware = [...getDefaultMiddleware(), logger];\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: contactsReducer,\r\n  },\r\n  middleware: middleware,\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\n// console.log(store);\r\nexport default store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport store from './../src/redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n    ;\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}